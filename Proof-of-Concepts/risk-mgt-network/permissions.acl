/**
 * Access control rules for decentralized-energy-network
 */


//Residents to have access only to their own account
rule ResidentAccessOwnRecord {
    description: "Allow residents to access only their profile"
    participant(p): "firm.risk.dltnet.Resident"
    operation: READ, UPDATE, DELETE
    resource(r): "firm.risk.dltnet.Resident"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}


//Residents to have read only access to other Residents
rule ResidentReadAccessResidents {
    description: "Allow residents read access to other residents"
    participant: "firm.risk.dltnet.Resident"
    operation: READ
    resource: "firm.risk.dltnet.Resident"    
    action: ALLOW
}

//Residents to have read only access to other Banks
rule ResidentReadAccessBanks {
    description: "Allow residents read access to other banks"
    participant: "firm.risk.dltnet.Resident"
    operation: READ
    resource: "firm.risk.dltnet.Bank"    
    action: ALLOW
}

//Residents to have read only access to other Utility Companies
rule ResidentReadAccessUtilityCompanies {
    description: "Allow residents read access to other utility companies"
    participant: "firm.risk.dltnet.Resident"
    operation: READ
    resource: "firm.risk.dltnet.UtilityCompany"    
    action: ALLOW
}


//Residents to have read access to all coins assets
rule ResidentAccessCoinsRecord {
    description: "Allow residents read access to all coins assets"
    participant: "firm.risk.dltnet.Resident"
    operation: READ
    resource: "firm.risk.dltnet.Coins"    
    action: ALLOW
}

//Residents to have read access to all energy assets
rule ResidentAccessEnergyRecord {
    description: "Allow residents read access to all energy assets"
    participant: "firm.risk.dltnet.Resident"
    operation: READ
    resource: "firm.risk.dltnet.Energy"    
    action: ALLOW
}

//Residents to have read access to all cash assets
rule ResidentAccessCashRecord {
    description: "Allow residents read access to all cash assets"
    participant: "firm.risk.dltnet.Resident"
    operation: READ
    resource: "firm.risk.dltnet.Cash"    
    action: ALLOW
}

//Banks to have access to their own account
rule BankAccessOwnRecord {
    description: "Allow banks to access only their profile"
    participant(p): "firm.risk.dltnet.Bank"
    operation: READ, UPDATE, DELETE
    resource(r): "firm.risk.dltnet.Bank"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}


//Banks to have read only access to other Banks
rule BankReadAccessBanks {
    description: "Allow banks read access to other Banks"
    participant: "firm.risk.dltnet.Bank"
    operation: READ
    resource: "firm.risk.dltnet.Bank"    
    action: ALLOW
}

//Banks to have read only access to other Residents
rule BankReadAccessResidents {
    description: "Allow banks read access to other Residents"
    participant: "firm.risk.dltnet.Bank"
    operation: READ
    resource: "firm.risk.dltnet.Resident"    
    action: ALLOW
}

//Banks to have read only access to other Utility Companies
rule BankReadAccessUtilityCompanies {
    description: "Allow banks read access to other Utility Companies"
    participant: "firm.risk.dltnet.Bank"
    operation: READ
    resource: "firm.risk.dltnet.UtilityCompany"    
    action: ALLOW
}


//Banks to have read access to all coins assets
rule BankAccessCoinsRecord {
    description: "Allow banks read access to all coins assets"
    participant: "firm.risk.dltnet.Bank"
    operation: READ
    resource: "firm.risk.dltnet.Coins"    
    action: ALLOW
}

//Banks to have read/update access to all cash assets
rule BankAccessCashRecord {
    description: "Allow banks read access to all cash assets"
    participant: "firm.risk.dltnet.Bank"
    operation: READ
    resource: "firm.risk.dltnet.Cash"    
    action: ALLOW
}


//Utility Companies to have access to their own account
rule UtilityCompanyAccessOwnRecord {
    description: "Allow utilty company to access only their profile"
    participant(p): "firm.risk.dltnet.UtilityCompany"
    operation: READ, UPDATE, DELETE
    resource(r): "firm.risk.dltnet.UtilityCompany"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}


//Utility Companies to have read only access to other Utility Companies
rule UtilityCompanyReadAccessUtilityCompanies {
    description: "Allow utility companies read access to other Utility Companies"
    participant: "firm.risk.dltnet.UtilityCompany"
    operation: READ
    resource: "firm.risk.dltnet.UtilityCompany"    
    action: ALLOW
}


//Utility Companies to have read only access to other Residents
rule UtilityCompanyReadAccessResidents {
    description: "Allow utility companies read access to other Residents"
    participant: "firm.risk.dltnet.UtilityCompany"
    operation: READ
    resource: "firm.risk.dltnet.Resident"    
    action: ALLOW
}


//Utility Companies to have read only access to other Banks
rule UtilityCompanyReadAccessBanks {
    description: "Allow utility companies read access to other Banks"
    participant: "firm.risk.dltnet.UtilityCompany"
    operation: READ
    resource: "firm.risk.dltnet.Bank"    
    action: ALLOW
}


//Utility Companies to have read access to all coins assets
rule UtilityCompanyAccessCoinsRecord {
    description: "Allow utility companies read access to all coins assets"
    participant: "firm.risk.dltnet.UtilityCompany"
    operation: READ
    resource: "firm.risk.dltnet.Coins"    
    action: ALLOW
}

//Utility Companies to have read/update access to all energy assets
rule UtilityCompanyAccessEnergyRecord {
    description: "Allow utility companies read access to all energy assets"
    participant: "firm.risk.dltnet.UtilityCompany"
    operation: READ
    resource: "firm.risk.dltnet.Energy"    
    action: ALLOW
}

/*
rule Default {
    description: "Allow all participants access to all resources"
    participant: "ANY"
    operation: ALL
    resource: "firm.risk.dltnet.*"
    action: ALLOW
}
*/
rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}